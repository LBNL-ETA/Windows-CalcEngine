language: cpp
sudo: false
notifications:
  email: false

# Use Linux unless specified otherwise
os: linux
dist: focal

cache:
  directories:
    - ${TRAVIS_BUILD_DIR}/deps

matrix:
  include:
    ##########################################################################
    # Clang on macOS
    ##########################################################################
    - os: osx
      osx_image: xcode12.5
      compiler: clang
      env: BUILD_TYPE=Release GSL_CXX_STANDARD=17

    ##########################################################################
    # GCC on Ubuntu
    ##########################################################################
    - os: linux
      dist: focal
      compiler: gcc
      env: BUILD_TYPE=Release GSL_CXX_STANDARD=17

    ##########################################################################
    # MSVC on Windows
    ##########################################################################
    - os: windows
      env: BUILD_TYPE=Release GSL_CXX_STANDARD=17
      before_install:
        - choco install cmake --installargs 'ADD_CMAKE_TO_PATH=System'
        - choco install visualstudio2019community
        - choco install visualstudio2019-workload-vctools
      script:
        - mkdir build
        - cd build
        - cmake .. -G "Visual Studio 16 2019" -A x64 -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DGSL_CXX_STANDARD=$GSL_CXX_STANDARD
        - cmake --build . --config $BUILD_TYPE
        - ctest -C $BUILD_TYPE

install:
  # Set the ${CXX} variable properly
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then export CXX=clang++; fi
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then export CXX=g++; fi
  - ${CXX} --version

  # Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}"
  - cd "${DEPS_DIR}"

  # Install a recent CMake (unless already installed on OS X)
  - CMAKE_VERSION=3.14.4
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    elif [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then
      brew install cmake || brew upgrade cmake
    fi
  - cmake --version

before_script:
  # Have CMake generate build files
  - cd "${TRAVIS_BUILD_DIR}"
  - mkdir build && cd build
  - cmake .. -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DGSL_CXX_STANDARD=$GSL_CXX_STANDARD -DFORCE_SINGLE_PROJECT=OFF

script:
  # Build and run tests
  - cmake --build . -- -j2
  - src/Common/FenestrationCommon_tests
  - src/Gases/Gases_tests
  - src/SingleLayerOptics/SingleLayerOptics_tests
  - src/MultiLayerOptics/MultiLayerOptics_tests
  - src/SpectralAveraging/SpectralAveraging_tests
  - src/Tarcog/Tarcog_tests
  - src/Viewer/Viewer_tests
