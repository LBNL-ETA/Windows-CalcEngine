name: macOS 12.0

on: [push, pull_request]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally
    # well on Windows or Mac.  You can convert this to a matrix build if you need
    # cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-12

    steps:
    - uses: actions/checkout@v2

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_CXX_STANDARD=17

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}
      
    - name: Test Fenestration Common
      working-directory: ${{github.workspace}}/build
      run: src/Common/FenestrationCommon_tests
      
    - name: Test Viewer
      working-directory: ${{github.workspace}}/build
      run: src/Viewer/Viewer_tests
      
    - name: Test Gases
      working-directory: ${{github.workspace}}/build
      run: src/Gases/Gases_tests
      
    - name: Test Tarcog
      working-directory: ${{github.workspace}}/build
      run: src/Tarcog/Tarcog_tests
      
    - name: Test Spectral Averaging
      working-directory: ${{github.workspace}}/build
      run: src/SpectralAveraging/SpectralAveraging_tests
      
    - name: Test Single Layer Optics
      working-directory: ${{github.workspace}}/build
      run: src/SingleLayerOptics/SingleLayerOptics_tests
      
    - name: Test Multi Layer Optics
      working-directory: ${{github.workspace}}/build
      run: src/MultiLayerOptics/MultiLayerOptics_tests
